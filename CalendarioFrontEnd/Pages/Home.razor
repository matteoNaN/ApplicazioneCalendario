@page "/"
@using CalendarioFrontEnd.Components
@using CalendarioFrontEnd.Services.Http
@using Heron.MudCalendar
@using MudBlazor
@using SharedLibrary.DTOs
@using SharedLibrary.Models
@inject JwtAuthenticationStateProvider _jwtAuthenticationStateProvider
@inject GruppiHttpClass _gruppiService

<PageTitle>I miei gruppi</PageTitle>


<MudIconButton Icon="@Icons.Material.Filled.Add" 
Color="Color.Primary" 
Variant="Variant.Filled" 
Class="fab-button"
Style="position: fixed; bottom: 24px; right: 24px; z-index: 100; width: 64px; height: 64px;"
OnClick="() => HandleFormVisibility()" />



<MudContainer Class="mt-4 mobile-padding">

    @if(_showForm)
    {

        <FormGruppi OnSuccessfullSubmit="HandleFormSuccess" />
    }


    @if (gruppiList == null)
    {
        <MudGrid Justify="Justify.Center" Class="text-center">
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
        </MudGrid>
    }
    else if (!gruppiList.Any())
    {
        <MudGrid Justify="Justify.Center" Class="text-center">
            <MudText Typo="Typo.h6" Color="Color.Secondary">Non sei iscritto a nessun gruppo</MudText>
        </MudGrid>
    }
    else
    {
        <MudGrid Spacing="3" Justify="Justify.Center">
            <MudItem xs="12" Class="mb-2 px-2">
                <MudText Typo="Typo.h4" Color="Color.Primary" Class="text-center mb-4">I tuoi gruppi</MudText>
            </MudItem>

            @foreach (var gruppo in gruppiList)
            {
                <GruppiCard gruppo="gruppo" />
            }
        </MudGrid>
    }
</MudContainer>

@code {
    private bool _showForm = false;
    public List<GruppoDTO> gruppiList;

    protected override async Task OnInitializedAsync()
    {
        await LoadGroups();
    }

    private async Task LoadGroups()
    {
        var res = await _gruppiService.GetGruppiUtente();
        if (res.IsSuccess)
        {
            gruppiList = res.Data;
        }
    }

    private async Task HandleFormSuccess()
    {
        _showForm = false;
        await InvokeAsync(LoadGroups);
        StateHasChanged();
    }

    private void HandleFormVisibility()
    {
        _showForm = !_showForm;
        return;
    }
}